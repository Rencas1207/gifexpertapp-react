{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","placeholder","propType","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","props","categories","ReactDOM","render","document","getElementById"],"mappings":"oNAGMA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACrB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACE,sBAAMC,SAVa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,MAKhB,SACE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SAlBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,QAkBnBG,YAAY,8BAMpBf,EAAYgB,SAAW,CACrBf,cAAegB,IAAUC,KAAKC,YAGjBnB,Q,+BCnCFoB,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEfC,EAFe,iDAEiCC,UACpDH,GAHmB,+DAKFI,MAAMF,GALJ,cAKfG,EALe,gBAMEA,EAAKC,OANP,uBAMbC,EANa,EAMbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZjB,kBAgBdM,GAhBc,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACnC,OACE,sBAAKc,UAAU,2CAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAI,UACnB,4BAAIN,QCDGO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SACxB,ECC0B,SAACA,GAC3B,MAA0BnB,mBAAS,CACjC0B,KAAM,GACNa,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WACRxB,EAAQC,GAAUwB,MAAK,SAACC,GACtBH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAGZ,CAACpB,IAEGqB,EDhB2BK,CAAa1B,GAAjCa,EAAd,EAAQN,KAAca,EAAtB,EAAsBA,QAYtB,OACE,qCACE,oBAAIJ,UAAU,oDAAd,SACGhB,IAGFoB,GAAW,mBAAGJ,UAAU,UAAb,qBAEZ,qBAAKA,UAAU,YAAf,SAKGH,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEPjBgB,EApBM,SAACC,GACpB,MAAoC/C,mBAAS,CAAC,cAA9C,mBAAOgD,EAAP,KAAmBjD,EAAnB,KAEA,OACE,qCACE,oBAAIoC,UAAU,QAAd,4BACA,cAAC,EAAD,CAAapC,cAAeA,IAC5B,uBAECiD,EAAWpB,KAAI,SAACT,GAAD,OAEd,aADA,CACC,EAAD,CAAwBA,SAAUA,GAApBA,U,MCTtB8B,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.2c7a19e9.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Validaciones\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((cats) => [inputValue, ...cats]);\r\n      setInputValue('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n        placeholder=\"Ingrese su búsqueda\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propType = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddCategory;\r\n","export const getGifs = async (category) => {\r\n  // Colocamos encodeURI por si la busqueda tiene espacios como (Rick and Morty)\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    category\r\n  )}&limit=10&api_key=GTFnjH2UIg90s4E9YH6SWF3dg7GNF0kz`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url,\r\n    };\r\n  });\r\n\r\n  return gifs;\r\n  //setImages\r\n  //   console.log(gifs);\r\n  //   setImages(gifs);\r\n};\r\n","import React from 'react';\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeInUp\">\r\n      <img src={url} alt=\"title\" />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { data: images, loading } = useFetchGifs(category);\r\n  //   console.log(state);\r\n  //   const [images, setImages] = useState([]);\r\n\r\n  // El useEffect hace que se ejecuta una unica vez, sirve como una condicional\r\n  // Las gifs e images al final van hacer las mismas\r\n  //   useEffect(() => {\r\n  //  getGifs(category).then((gifs) => setImages(gifs));\r\n  //     getGifs(category).then(setImages);\r\n  //   }, [category]);\r\n  // Luego le pasamos al array el category para quitar el warning\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"categoria animate__animated animate__bounceInDown\">\r\n        {category}\r\n      </h3>\r\n\r\n      {loading && <p className=\"loading\">Loading</p>}\r\n\r\n      <div className=\"card-grid\">\r\n        {/* {images.map((img) => (\r\n        <GifGridItem key={img.id} img={img} />\r\n      ))} */}\r\n        {/* En este caso estamos usando la desestructuración ya que es un arreglo de objeto lo que estamos mandando */}\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n// CUSTOM HOOKS\r\n// Los custom hooks funcionan como si fueran functional components, pueden tener\r\n// efectos, reducer, context, etc\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => {\r\n      setstate({\r\n        data: imgs,\r\n        loading: false,\r\n      });\r\n    });\r\n  }, [category]);\r\n\r\n  return state; // {data: [], loading: true}\r\n};\r\n","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n// import PropTypes from 'prop-types';\r\n\r\nconst GifExpertApp = (props) => {\r\n  const [categories, setCategories] = useState(['One Punch']);\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"title\">Gif Expert App</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n      {/* <ul> */}\r\n      {categories.map((category) => (\r\n        //  <li key={category}>{category}</li>\r\n        <GifGrid key={category} category={category} />\r\n      ))}\r\n      {/* </ul> */}\r\n    </>\r\n  );\r\n};\r\n\r\n// GifExpertApp.propTypes = {};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n\n// Componente GifExpertApp\n"],"sourceRoot":""}